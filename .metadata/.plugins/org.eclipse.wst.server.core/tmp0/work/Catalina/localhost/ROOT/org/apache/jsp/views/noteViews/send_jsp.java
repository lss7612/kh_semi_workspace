/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.37
 * Generated at: 2020-11-04 08:15:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.noteViews;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import dto.note.NoteReceiverView;
import java.util.List;

public final class send_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("dto.note.NoteReceiverView");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	List<NoteReceiverView> manUser = (List<NoteReceiverView>) request.getAttribute("manUser");

      out.write('\r');
      out.write('\n');

	List<NoteReceiverView> accUser = (List<NoteReceiverView>) request.getAttribute("accUser");

      out.write('\r');
      out.write('\n');

	List<NoteReceiverView> hrUser = (List<NoteReceiverView>) request.getAttribute("hrUser");

      out.write('\r');
      out.write('\n');

	List<NoteReceiverView> devUser = (List<NoteReceiverView>) request.getAttribute("devUser");

      out.write('\r');
      out.write('\n');

	List<NoteReceiverView> salesUser = (List<NoteReceiverView>) request.getAttribute("salesUser");

      out.write("\r\n");
      out.write("\r\n");

	List<Integer> selectedUsers = (List<Integer>) request.getAttribute("selectedUserList");

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	List<Integer> selectedUsersName = (List<Integer>) request.getAttribute("selectedUserNameList");

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/views/common/headerKKH.jsp", out, false);
      out.write("\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"https://code.jquery.com/jquery-2.2.4.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/views/noteViews/resource/send.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/views/noteViews/resource/send.css\"></link>\r\n");
      out.write("<div class=\"content-wrapper\">\r\n");
      out.write("<main>\r\n");
      out.write("<br>\r\n");
      out.write("\t<h1 style=\"text-align:center;\">쪽지 보내기</h1>\r\n");
      out.write("\t<hr />\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"whole_wrapper\">\r\n");
      out.write("\t<form action=\"/note/send\" method=\"POST\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td><label for=\"title\">제목</label></td>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"text\" name=\"title\" id=\"title\" /></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>받는사람</td>\r\n");
      out.write("\t\t\t\t\t<td id=\"receiver\">\r\n");
      out.write("\t\t\t\t\t");
 for(int i = -1; i > -selectedUsers.size()-1; i-- ){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t<input type =\"text\" style=\"\" readonly=\"readonly\" width=\"30px;\" name=\"receiver");
      out.print(i );
      out.write("\" class=\"receivers\" \r\n");
      out.write("\t\t\t\t\tvalue=\"");
      out.print( selectedUsers.get(-(i+1)));
      out.write("\"/>\r\n");
      out.write("\t\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>받는사람추가</td>\r\n");
      out.write("\t\t\t\t\t<td id=\"select\"><select name=\"dept\" id=\"dept\">\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"select\">부서선택</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option id=\"acc\" value=\"acc\">회계</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option id=\"man\" value=\"man\">경영</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option id=\"hr\" value=\"hr\">인사</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option id=\"dev\" value=\"dev\">개발</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option id=\"sal\" value=\"sal\">영업</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option id=\"addr\" value=\"addr\">내주소록</option>\r\n");
      out.write("\t\t\t\t\t</select> \r\n");
      out.write("\t\t\t\t\t<select name=\"man\" id=\"selectMan\" class=\"none selectPerson\">\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t");

								for (int i = 0; i < manUser.size(); i++) {
							
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"");
      out.print(manUser.get(i).getUser_no());
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t\t");
      out.print("사번(" + manUser.get(i).getUser_no() + ")" + " / " + manUser.get(i).getUser_name());
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t</option>\r\n");
      out.write("\t\t\t\t\t\t\t");

								}
							
      out.write("\r\n");
      out.write("\t\t\t\t\t</select> \r\n");
      out.write("\t\t\t\t\t<select name=\"acc\" id=\"selectAcc\" class=\"none selectPerson\">\r\n");
      out.write("\t\t\t\t\t\t\t");

								for (int i = 0; i < accUser.size(); i++) {
							
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"");
      out.print(accUser.get(i).getUser_no());
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t\t");
      out.print("사번(" + accUser.get(i).getUser_no() + ")" + " / " + accUser.get(i).getUser_name());
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t</option>\r\n");
      out.write("\t\t\t\t\t\t\t");

								}
							
      out.write("\r\n");
      out.write("\t\t\t\t\t</select> \r\n");
      out.write("\t\t\t\t\t<select name=\"hr\" id=\"selectHr\" class=\"none selectPerson\">\r\n");
      out.write("\t\t\t\t\t\t\t");

								for (int i = 0; i < hrUser.size() - 1; i++) {
							
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"");
      out.print(hrUser.get(i).getUser_no());
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t\t");
      out.print("사번(" + hrUser.get(i).getUser_no() + ")" + " / " + hrUser.get(i).getUser_name());
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t</option>\r\n");
      out.write("\t\t\t\t\t\t\t");

								}
							
      out.write("\r\n");
      out.write("\t\t\t\t\t</select> \r\n");
      out.write("\t\t\t\t\t<select name=\"dev\" id=\"selectDev\" class=\"none selectPerson\">\r\n");
      out.write("\t\t\t\t\t\t\t");

								for (int i = 0; i < devUser.size(); i++) {
							
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"");
      out.print(devUser.get(i).getUser_no());
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t\t");
      out.print("사번(" + devUser.get(i).getUser_no() + ")" + " / " + devUser.get(i).getUser_name());
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t</option>\r\n");
      out.write("\t\t\t\t\t\t\t");

								}
							
      out.write("\r\n");
      out.write("\t\t\t\t\t</select> \r\n");
      out.write("\t\t\t\t\t<select name=\"sal\" id=\"selectSal\" class=\"none selectPerson\">\r\n");
      out.write("\t\t\t\t\t\t\t");

								for (int i = 0; i < salesUser.size(); i++) {
							
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"");
      out.print(salesUser.get(i).getUser_no());
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t\t");
      out.print("사번(" + salesUser.get(i).getUser_no() + ")" + " / " + salesUser.get(i).getUser_name());
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t</option>\r\n");
      out.write("\t\t\t\t\t\t\t");

								}
							
      out.write("\r\n");
      out.write("\t\t\t\t\t</select> \r\n");
      out.write("\t\t\t\t\t<select name=\"addr\" id=\"selectDevAddr\" class=\"none selectPerson\">\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"\"></option>\r\n");
      out.write("\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t<span id=\"add\">추가</span>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td><label for=\"article\">쪽지내용</label></td>\r\n");
      out.write("\t\t\t\t\t<td><textarea name=\"article\" id=\"article\" cols=\"30\" rows=\"10\"></textarea>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td></td>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"submit\" value=\"보내기\" /></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</tbody>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/views/noteViews/buttons.jsp", out, false);
      out.write("\r\n");
      out.write("\t</main>\r\n");
      out.write("\t</div>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/views/common/footerKKH.jsp", out, false);
      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
