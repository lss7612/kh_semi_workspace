/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.37
 * Generated at: 2020-11-04 01:32:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.noteViews;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Date;
import java.util.ArrayList;
import java.text.SimpleDateFormat;
import dto.note.NoteList;
import java.util.List;

public final class receivedList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("dto.note.NoteList");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 List<NoteList> list = (List<NoteList>) request.getAttribute("list"); 
      out.write('\r');
      out.write('\n');
 List<String> sdl = new ArrayList<>(); 
      out.write("\r\n");
      out.write("\r\n");
for(int i = 0; i < list.size(); i ++){ 
      out.write('\r');
      out.write('\n');
 String send_date = list.get(i).getSend_date(); 
      out.write('\r');
      out.write('\n');
 sdl.add(i, send_date); 
      out.write('\r');
      out.write('\n');
} 
      out.write("\r\n");
      out.write("    \r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/views/common/headerKKH.jsp", out, false);
      out.write("\r\n");
      out.write("    <title>받은쪽지함</title>\r\n");
      out.write("    \r\n");
      out.write("    <script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-2.2.4.min.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"/resources/js/httpRequest.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"/views/noteViews/resource/receivedList.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"/views/noteViews/resource/selectAll.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/views/noteViews/resource/sendList,receivedList.css\"></link>\r\n");
      out.write("    \r\n");
      out.write("<div class=\"content-wrapper\">\r\n");
      out.write(" \r\n");
      out.write("    <h1>받은 쪽지함</h1>\r\n");
      out.write("    <hr />\r\n");
      out.write("\r\n");
      out.write("    <article>\r\n");
      out.write("      <div class =\"\" id=\"search\">\r\n");
      out.write("        <form id=\"search\" action=\"/test\" method=\"GET\" style=\"display:none\">\r\n");
      out.write("          <select>\r\n");
      out.write("            <option value=\"all\" selected=\"selected\">전체</option>\r\n");
      out.write("            <option value=\"title\">제목</option>\r\n");
      out.write("            <option value=\"article\">내용</option>\r\n");
      out.write("            <option value=\"sender\">보낸사람</option>\r\n");
      out.write("            <option value=\"receiver\">받는사람</option>\r\n");
      out.write("          </select>\r\n");
      out.write("          <input type=\"text\" name=\"keyword\"><button name:=\"search\">검색</button>\r\n");
      out.write("        </form>\r\n");
      out.write("      </div>\r\n");
      out.write("      <hr>\r\n");
      out.write("        <div class =\"wrapper\" id=\"list\">\r\n");
      out.write("      <form id=\"deleteAll\" action=\"/note/receivednotedelete\" method=\"GET\">\r\n");
      out.write("      <table>\r\n");
      out.write("        <thead>\r\n");
      out.write("          <tr>\r\n");
      out.write("            <th><input type=\"checkbox\" class=\"selectAllCheckbox\"></th>\r\n");
      out.write("            <th>no</th>\r\n");
      out.write("            <th>제목</th>\r\n");
      out.write("            <th>보낸사람</th>\r\n");
      out.write("            <th>보낸시간</th>\r\n");
      out.write("          </tr>\r\n");
      out.write("        </thead>\r\n");
      out.write("          <tbody>\r\n");
      out.write("          ");
 for (int i = 0; i < list.size(); i++) { 
      out.write("\r\n");
      out.write("            <tr>\r\n");
      out.write("              <td class=\"checkbox\"><input type=\"checkbox\" name=\"note_no");
      out.print(i);
      out.write("\" value=\"");
      out.print(list.get(i).getNote_no());
      out.write("\" id=\"\"></td>\r\n");
      out.write("              <td class=\"note_no\">");
      out.print(list.get(i).getNote_no() );
      out.write("</td>\r\n");
      out.write("              <td class=\"title\"><span class =\"content_title\">");
      out.print(list.get(i).getNote_title() );
      out.write("</span></td>\r\n");
      out.write("              <td class=\"receiver_name\"><span>");
      out.print(list.get(i).getSender_name());
      out.write("</span></td>\r\n");
      out.write("              <td class=\"send_date\">");
      out.print(sdl.get(i));
      out.write("</td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("          </tbody>\r\n");
      out.write("          \r\n");
      out.write("        </table>\r\n");
      out.write("        </form>\r\n");
      out.write("      </div>\r\n");
      out.write("      <hr>\r\n");
      out.write("        <button class=\"deleteAll\">선택삭제</button>\r\n");
      out.write("    </article>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/views/noteViews/received_paging.jsp", out, false);
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/views/noteViews/buttons.jsp", out, false);
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t</div>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/views/common/footerKKH.jsp", out, false);
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
