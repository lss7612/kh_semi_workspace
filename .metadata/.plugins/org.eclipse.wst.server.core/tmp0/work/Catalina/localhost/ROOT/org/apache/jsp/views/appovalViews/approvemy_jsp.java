/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.37
 * Generated at: 2020-11-04 01:39:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.appovalViews;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import dto.appr.ApprMy;
import java.util.List;

public final class approvemy_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("dto.appr.ApprMy");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	List<ApprMy> list = (List<ApprMy>) request.getAttribute("list");

      out.write('\r');
      out.write('\n');
  
String holi = "/approvalMy/modHoly";
String work = "/approvalMy/mod";

      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/views/common/headerKKH.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("table {\r\n");
      out.write("\tborder-top: 2px solid;\r\n");
      out.write("\tborder-color: #ccc;\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("\twidth: 80%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".dobutton {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tmargin-bottom: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#dobutton {\r\n");
      out.write("\twidth: 130px;\r\n");
      out.write("\theight: 50px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#bot :first-child {\r\n");
      out.write("\tmargin-left: 10%\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function() {\r\n");
      out.write("    $(\"#approveform\").submit(function() {\r\n");
      out.write("\t\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("})\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("<div class=\"content-wrapper\">\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<main>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<h3 style=\"text-align: center;\">기안함</h3>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=dobutton>\r\n");
      out.write("\t\t\t\t<button id=\"dobutton\">승인 문서 3</button>\r\n");
      out.write("\t\t\t\t<button id=\"dobutton\">반려 문서 1</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t<table>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("<!-- \t\t\t\t\t<th><label>전체선택<input type=\"checkbox\" name=\"color\" -->\r\n");
      out.write("<!-- \t\t\t\t\t\t\tvalue=\"blue\"> -->\r\n");
      out.write("<!-- \t\t\t\t\t</label></th> -->\r\n");
      out.write("\t\t\t\t\t<th>이름</th>\r\n");
      out.write("\t\t\t\t\t<th>부서</th>\r\n");
      out.write("\t\t\t\t\t<th>직급</th>\r\n");
      out.write("\t\t\t\t\t<th>결재 제목</th>\r\n");
      out.write("\t\t\t\t\t<th>결재계</th>\r\n");
      out.write("\t\t\t\t\t<th>상신일</th>\r\n");
      out.write("\t\t\t\t\t<th>결재상태</th>\r\n");
      out.write("\t\t\t\t\t<th>결재 일시</th>\r\n");
      out.write("\t\t\t\t\t<th>버튼</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<!-- 결재 목록 -->\r\n");
      out.write("\t\t\t\t");

					for (int i = 0; i < list.size(); i++) {
				
      out.write("\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("<!-- \t\t\t\t\t<td><input type=\"checkbox\" name=\"color\" value=\"blue\"></td> -->\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(list.get(i).getUser_name() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(list.get(i).getDept_name() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(list.get(i).getPosition_name() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td><a href='#' onclick=\"window.open('/approval/myDetail?a=");
      out.print(list.get(i).getAprvl_no());
      out.write('&');
      out.write('b');
      out.write('=');
      out.print(list.get(i).getAprvl_type() );
      out.write("','_blank','width=800,height=800'); return false;\" id=");
      out.print(i);
      out.write(" name=");
      out.print(list.get(i).getAprvl_no() );
      out.write('>');
      out.print(list.get(i).getAprvl_title() );
      out.write("</a></td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(list.get(i).getAprvl_type() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(list.get(i).getCreate_date() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(list.get(i).getState_name() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(list.get(i).getFinal_date() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t");
 String result=work; 
					System.out.println("휴가계맞니??"+list.get(i).getAprvl_type());
					String kk= list.get(i).getAprvl_type();
					if(kk.equals("휴가계"))
{  
      out.write("\r\n");
      out.write("\t\t\t\t\t");
  result=holi; 
					System.out.println(result);
					
      out.write("\r\n");
      out.write("\t\t\t\t\t");
 }
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<a href=# name=\"modify\" onclick=\"window.open('");
      out.print(result);
      out.write("?num=");
      out.print(list.get(i).getAprvl_no());
      out.write("&type=");
      out.print(list.get(i).getAprvl_type());
      out.write("&title=");
      out.print(list.get(i).getAprvl_title() );
      out.write("&content=");
      out.print(list.get(i).getAprvl_article());
      out.write("&','_blank','width=800,height=800'); return false;\" >수정</a></td>\t\t\t\t\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t");
}	
      out.write("\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t\t<div id=\"bot\">\r\n");
      out.write("\t\t\t\t<button>기안하기</button>\r\n");
      out.write("\t\t\t\t<button>삭제</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div>\r\n");
      out.write("\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/views/common/paging.jsp", out, false);
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</main>\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/views/common/footerKKH.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
