/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.37
 * Generated at: 2020-11-04 01:29:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.login;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"/views/common/errorpage.jsp", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("      \r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"utf-8\">\r\n");
      out.write("  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("  <title>일조 그룹웨어 로그인</title>\r\n");
      out.write("  <!-- Tell the browser to be responsive to screen width -->\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("\r\n");
      out.write("  <!-- Font Awesome -->\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"/resources/plugins/fontawesome-free/css/all.min.css\">\r\n");
      out.write("  <!-- Ionicons -->\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css\">\r\n");
      out.write("  <!-- icheck bootstrap -->\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"/resources/plugins/icheck-bootstrap/icheck-bootstrap.min.css\">\r\n");
      out.write("  <!-- Theme style -->\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"/resources/dist/css/adminlte.css\">\r\n");
      out.write("  <!-- Google Font: Source Sans Pro -->\r\n");
      out.write("  <link href=\"https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700\" rel=\"stylesheet\">\r\n");
      out.write("  <script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-2.2.4.min.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("  \r\n");
        
    response.setHeader("Pragma", "No-cache");
    response.setHeader("Cache-Control", "no-cache, no-store, must-revalidate, private");
    response.setDateHeader("Expires", -1);

      out.write("\r\n");
      out.write("  \r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("  <script type=\"text/javascript\">\r\n");
      out.write("  \r\n");
      out.write("  function loginOk() {\r\n");
      out.write("\r\n");
      out.write("\t  var f = document.loginForm;\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t  if(!f.user_id.value) {\r\n");
      out.write("\r\n");
      out.write("\t  alert(\"아이디를 입력해라\");\r\n");
      out.write("\r\n");
      out.write("\t  f.user_id.focus();\r\n");
      out.write("\r\n");
      out.write("\t  return false;\r\n");
      out.write("\r\n");
      out.write("\t  }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t  if(!f.user_pw.value) {\r\n");
      out.write("\r\n");
      out.write("\t  alert(\"비밀번호를 입력해라\");\r\n");
      out.write("\r\n");
      out.write("\t  f.user_pw.focus();\r\n");
      out.write("\r\n");
      out.write("\t  return false;\r\n");
      out.write("\r\n");
      out.write("\t  }\r\n");
      out.write("\r\n");
      out.write("\t  f.submit();\r\n");
      out.write("\r\n");
      out.write("\t  }\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("  </script>\r\n");
      out.write("  \r\n");
      out.write("     <script type=\"text/javascript\">\r\n");
      out.write(" window.history.forward();\r\n");
      out.write(" function noBack(){window.history.forward();}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"hold-transition login-page\" onload=\"noBack();\" onpageshow=\"if(event.persisted) noBack();\" onunload=\"\">\r\n");
      out.write("\r\n");
      out.write("<div class=\"login-box\">\r\n");
      out.write("  <div class=\"login-logo\">\r\n");
      out.write("     <img src=\"/resources/images/biglogo.png\" />\r\n");
      out.write("  </div>\r\n");
      out.write("  <!-- /.login-logo -->\r\n");
      out.write("  <div class=\"card\">\r\n");
      out.write("    <div class=\"card-body login-card-body\">\r\n");
      out.write("      <p class=\"login-box-msg\">Sign in to start your session</p>\r\n");
      out.write("\r\n");
      out.write("      <form action=\"");
      out.print(request.getContextPath());
      out.write("/Login/login\" method=\"post\"  name=\"loginForm\" >\r\n");
      out.write("        <div class=\"input-group mb-3\">\r\n");
      out.write("          <input type=\"text\" class=\"form-control\" placeholder=\"아이디\" id=\"user_id\" name=\"user_id\" autofocus onkeypress=\"if(event.keyCode == 13){ loginOk(); return false;}\" >\r\n");
      out.write("          <div class=\"input-group-append\">\r\n");
      out.write("            <div class=\"input-group-text\">\r\n");
      out.write("              <span class=\"fas fa-envelope\"></span>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div style=\"margin:5px 0px;\"> @일조.kr </div> \r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"input-group mb-3\">\r\n");
      out.write("          <input type=\"password\" class=\"form-control\" placeholder=\"비밀번호\"  id=\"user_pw\" name=\"user_pw\" onkeypress=\"if(event.keyCode == 13){ loginOk(); return false;}\">\r\n");
      out.write("          <div class=\"input-group-append\">\r\n");
      out.write("            <div class=\"input-group-text\">\r\n");
      out.write("              <span class=\"fas fa-lock\"></span>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        <!-- 로그인 실패시 메세지 -->\r\n");
      out.write("\t\t\t  <!-- param.변수 => request.getParameter(\"변수\") -->\r\n");
      out.write("\t\t\t  <span style=\"color: red;\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.message}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span>\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("          <div class=\"col-8\">\r\n");
      out.write("            <div class=\"icheck-primary\">\r\n");
      out.write("              <input type=\"checkbox\" id=\"remember\">\r\n");
      out.write("              <label for=\"remember\">\r\n");
      out.write("                아이디 저장하기\r\n");
      out.write("              </label>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("          <!-- /.col -->\r\n");
      out.write("          <div class=\"col-4\">\r\n");
      out.write("            <button type=\"submit\" class=\"btn btn-primary btn-block\" />로그인</button>\r\n");
      out.write("          </div>\r\n");
      out.write("          <!-- /.col -->\r\n");
      out.write("        </div>\r\n");
      out.write("      </form>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<p class=\"mb-1\">\r\n");
      out.write("        <a href=\"findId\">아이디 찾기</a>\r\n");
      out.write("      </p>\r\n");
      out.write("      <p class=\"mb-1\">\r\n");
      out.write("        <a href=\"findPw\">비밀번호 찾기</a>\r\n");
      out.write("      </p>\r\n");
      out.write("      <p class=\"mb-0\">\r\n");
      out.write("        <a href=\"/register/register\" class=\"text-center\">회원가입하기</a>\r\n");
      out.write("      </p>\r\n");
      out.write("    </div>\r\n");
      out.write("    <!-- /.login-card-body -->\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("<!-- /.login-box -->\r\n");
      out.write("\r\n");
      out.write("<!-- jQuery -->\r\n");
      out.write("<script src=\"/resources/plugins/jquery/jquery.min.js\"></script>\r\n");
      out.write("<!-- Bootstrap 4 -->\r\n");
      out.write("<script src=\"/resources/plugins/bootstrap/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("<!-- AdminLTE App -->\r\n");
      out.write("<script src=\"/resources/dist/js/adminlte.min.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
